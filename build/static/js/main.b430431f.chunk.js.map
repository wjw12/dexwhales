{"version":3,"sources":["serviceWorker.js","const.js","utils.js","uniswap.png","sushiswap.png","1inch.png","Card.js","Tip.js","App.js","reportWebVitals.js","index.js"],"names":["addMethods","methods","module","exports","w","Worker","name","markets","UNISWAP","SUSHISWAP","TITLE","PINK","getTimeString","blockTimestamp","parseInt","Date","toLocaleString","formatNumber","x","toFixed","formatTx","hash","substring","getTokenLink","address","numberOfWhales","action","value","dollarValue","tier","Card","props","emoji","conjunct","action_type","whales","newPair","i","token0Link","token0","token1Link","token1","price0","token0Price","price1","token1Price","isNaN","marketName","logo","uniswap_logo","market","sushiswap_logo","oneinch_logo","style","width","margin","fontSize","color","textAlign","marginTop","marginBottom","timestamp","href","target","display","alignContent","justifyContent","token0Amount","token0Name","token1Amount","token1Name","src","height","Tip","makeTip","web3","window","alert","user_address","eth","accounts","sendTransaction","to","from","toWei","err","transactionHash","message","position","right","bottom","lineHeight","className","onClick","workerInstance","worker","animatedComponents","makeAnimated","buildQuery","queryParams","query","Object","keys","key","from_timestamp","to_timestamp","a","params","fetch","res","ok","console","error","status","success","swaps","addLP","removeLP","json","result","latestTime","actionsWithinBlock","actions","JSON","parse","push","defaultDisplayConfig","SWAPS","ADD_LP","REMOVE_LP","NEW_PAIR","Note","Tag","css","fontStyle","Checkbox","type","App","useState","lastTime","setLastTime","txData","setTxData","actionList","setActionList","loading","setLoading","processing","setProcessing","displayConfig","setDisplayConfig","tokenList","setTokenList","localStorage","getItem","selectedTokens","setSelectedTokens","notify","setNotify","latestTxTime","useRef","createNotification","description","getNotificationDescription","img","log","Notification","body","icon","isTokenSelected","length","toLowerCase","refreshData","fetchData","current","then","data","now","Math","floor","_swaps","concat","_addLP","_removeLP","setTimeout","catch","e","refreshDisplay","config","displayList","filter","sortTransactions","sortedList","useEffect","setItem","stringify","document","title","token_list","callback","delay","savedCallback","id","setInterval","clearInterval","useInterval","top","alt","requestPermission","_","closeMenuOnSelect","components","placeholder","isMulti","options","defaultValue","getOptionLabel","tokenData","symbol","getOptionValue","onChange","checked","newConfig","marginLeft","left","map","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b430431f.chunk.js","sourcesContent":["\n\t\t\t\tvar addMethods = require(\"../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"sortTransactions\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"de76dd9247e45cd7d90a.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","\r\n\r\nexport const markets = {\r\n    UNISWAP: 'uniswap',\r\n    SUSHISWAP: 'sushiswap'\r\n}\r\n\r\nexport const DEFAULT_MARKET = markets.UNISWAP\r\n\r\n\r\nexport const TITLE = \"🧐𝘿𝙀𝙓 𝙒𝙃𝘼𝙇𝙀𝙎\"\r\nexport const API_URL = \"https://h9fioods1h.execute-api.us-east-1.amazonaws.com/default/dexwatch_api\"\r\nexport const INTERVAL = 10000\r\n\r\nexport const action_types = {\r\n  SWAPS: 'swaps',\r\n  ADD_LP: 'add_lp',\r\n  REMOVE_LP: 'remove_lp'\r\n}\r\n\r\nexport const PINK = \"#FF71CB\"\r\n\r\nexport const WHALE = \"🐳\"\r\nexport const WATER = \"💧\"\r\nexport const REMOVE_WATER = \"☔️\"\r\nexport const CREATE_NEW_PAIR = \"🔥\"\r\n\r\nexport const THEME_COLOR = {\r\n    UNISWAP: PINK,\r\n    SUSHISWAP: '#F7001E'\r\n}\r\n","import { useEffect, useRef } from 'react'\r\nimport { WHALE, WATER, REMOVE_WATER, CREATE_NEW_PAIR } from './const'\r\n\r\nexport function getTimeString(blockTimestamp) {\r\n    blockTimestamp = parseInt(blockTimestamp) * 1000\r\n    var date = new Date(blockTimestamp)\r\n    return date.toLocaleString()\r\n}\r\n\r\nexport function useInterval(callback, delay) {\r\n    const savedCallback = useRef()\r\n\r\n    useEffect(() => {\r\n        savedCallback.current = callback\r\n    }, [callback])\r\n\r\n    useEffect(() => {\r\n        function tick() {\r\n            savedCallback.current()\r\n        }\r\n\r\n        if (delay !== null) {\r\n            const id = setInterval(tick, delay)\r\n            return () => {\r\n                clearInterval(id)\r\n            }\r\n        }\r\n    }, [callback, delay])\r\n}\r\n\r\nexport function formatNumber(x) {\r\n    x = x.toFixed(2)\r\n    return x.toLocaleString()// toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")\r\n}\r\n\r\nexport function formatTx(hash) {\r\n    return hash.substring(0, 12) + \"...\"\r\n}\r\n\r\nexport function getTokenLink(address) {\r\n    return \"https://etherscan.io/token/\" + address\r\n}\r\n\r\nexport function getTxLink(hash) {\r\n    return \"https://etherscan.io/tx/\" + hash\r\n}\r\n\r\nexport function numberOfWhales(action) {\r\n    var value = action.dollarValue\r\n    var tier = action.tier\r\n    if (tier == 1) {\r\n        if (value < 250000) return 1\r\n        if (value < 400000) return 2\r\n        if (value < 1000000) return 3\r\n        return 4\r\n    }\r\n    else {\r\n        if (value < 100000) return 1\r\n        if (value < 300000) return 2\r\n        if (value < 800000) return 3\r\n        return 4\r\n    }\r\n}\r\n\r\nexport function getNotificationDescription(action) {\r\n    var action_type = action.name // string: Swap, AddLiquidity, RemoveLiquidity\r\n    var whales = \"\"\r\n    var emoji, conjunct\r\n    switch (action_type) {\r\n        case 'Swap':\r\n            conjunct = \" For \"\r\n            action_type = \"Swap\"\r\n            emoji = WHALE\r\n            break\r\n        case 'AddLiquidity':\r\n            conjunct = \" And \"\r\n            action_type = \"Add Liquidity\"\r\n            emoji = WATER\r\n            break\r\n        case 'RemoveLiquidity':\r\n            conjunct = \" And \"\r\n            emoji = REMOVE_WATER\r\n            action_type = \"Remove Liquidity\"\r\n            break\r\n    }\r\n    \r\n    if (action.newPair) {\r\n        emoji = CREATE_NEW_PAIR\r\n        action_type = \"Create New Pair\"\r\n    }\r\n    for (var i = 0; i < numberOfWhales(action); ++i) {\r\n        whales += emoji\r\n    }\r\n\r\n    var price0 = action.token0Price || null\r\n    var price1 = action.token1Price || null\r\n    if (price0 && !isNaN(price0)) {\r\n        price0 = ` (\\$${formatNumber(price0)})`\r\n    }\r\n    else price0 = null\r\n\r\n    if (price1 && !isNaN(price1)) {\r\n        price1 = ` (\\$${formatNumber(price1)})`\r\n    }\r\n    else price1 = null\r\n\r\n    var marketName\r\n    switch (action.market) { // could be undefined\r\n        case 'sushiswap':\r\n            marketName = \"Sushiswap\"\r\n            break\r\n        case '1inch':\r\n            marketName = \"1inch\"\r\n            break\r\n        default:\r\n            marketName = 'Uniswap'\r\n            break\r\n    }\r\n\r\n    return whales + ' ' + action_type + ' ' + formatNumber(action.token0Amount) + ' ' + action.token0Name + (price0 ? price0 : '') + \r\n      conjunct + formatNumber(action.token1Amount) + ' ' + action.token1Name + (price1 ? price1 : '') + ' at ' + marketName\r\n}","export default __webpack_public_path__ + \"static/media/uniswap.9586bdcd.png\";","export default __webpack_public_path__ + \"static/media/sushiswap.ecd50820.png\";","export default __webpack_public_path__ + \"static/media/1inch.e77b2f8d.png\";","import { useEffect, useState } from 'react'\r\nimport { WHALE, WATER, REMOVE_WATER, CREATE_NEW_PAIR } from './const'\r\nimport { getTimeString, numberOfWhales, formatNumber, formatTx, getTxLink, getTokenLink } from './utils'\r\nimport uniswap_logo from './uniswap.png'\r\nimport sushiswap_logo from './sushiswap.png'\r\nimport oneinch_logo from './1inch.png'\r\n\r\n\r\nexport default function Card(props) {\r\n    var action = props.action\r\n    var action_type = action.name // string: Swap, AddLiquidity, RemoveLiquidity\r\n    var whales = \"\"\r\n    var emoji, conjunct\r\n    switch (action_type) {\r\n        case 'Swap':\r\n            conjunct = \" For \"\r\n            emoji = WHALE\r\n            break\r\n        case 'AddLiquidity':\r\n            conjunct = \" And \"\r\n            action_type = \"Add Liquidity\"\r\n            emoji = WATER\r\n            break\r\n        case 'RemoveLiquidity':\r\n            conjunct = \" And \"\r\n            emoji = REMOVE_WATER\r\n            action_type = \"Remove Liquidity\"\r\n            break\r\n    }\r\n\r\n    if (action.newPair) {\r\n        emoji = CREATE_NEW_PAIR\r\n        action_type = \"Create New Pair\"\r\n    }\r\n    for (var i = 0; i < numberOfWhales(action); ++i) {\r\n        whales += emoji\r\n    }\r\n\r\n    var token0Link = getTokenLink(action.token0)\r\n    var token1Link = getTokenLink(action.token1)\r\n    var price0 = action.token0Price || null\r\n    var price1 = action.token1Price || null\r\n    if (price0 && !isNaN(price0)) {\r\n        price0 = ` (\\$${formatNumber(price0)})`\r\n    }\r\n    else price0 = null\r\n\r\n    if (price1 && !isNaN(price1)) {\r\n        price1 = ` (\\$${formatNumber(price1)})`\r\n    }\r\n    else price1 = null\r\n\r\n    var logo = uniswap_logo\r\n    var marketName\r\n    switch (action.market) { // could be undefined\r\n        case 'sushiswap':\r\n            logo = sushiswap_logo\r\n            marketName = \"Sushiswap\"\r\n            break\r\n        case '1inch':\r\n            logo = oneinch_logo\r\n            marketName = \"1inch\"\r\n            break\r\n        default:\r\n            logo = uniswap_logo\r\n            marketName = 'Uniswap'\r\n            break\r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n        <div style={{\r\n            width: '55%', \r\n            margin: 'auto'\r\n            }}>\r\n            <p style={{fontSize: 11, color: '#442211', textAlign: 'left', marginTop: 30, marginBottom: 4}}>\r\n                {getTimeString(action.timestamp)}\r\n                <a href={getTxLink(action.hash) } target={\"_blank\"} style={{color: 'gray'}}>{\" tx:\" + formatTx(action.hash)}</a>\r\n            </p>\r\n            <div style={{\r\n                display: 'flex',\r\n                alignContent: 'center',\r\n                justifyContent: 'center'\r\n            }}>\r\n\r\n                <p style={{marginTop: 5, marginBottom: 5}}>\r\n                    {whales + \" \" + action_type + \" \" + formatNumber(action.token0Amount) + \" \"} \r\n                    <a href={token0Link} target={\"_blank\"}>{action.token0Name}</a> {price0}\r\n                    {conjunct}\r\n                    {formatNumber(action.token1Amount) + \" \"}\r\n                    <a href={token1Link} target={\"_blank\"}>{action.token1Name}</a> {price1}\r\n                    {\" at \" + marketName}\r\n                    \r\n                </p>\r\n\r\n                <img src={logo} style={{\r\n                    marginTop: 'auto',\r\n                    marginBottom: 'auto',\r\n                    width: '35px',\r\n                    height: '35px',\r\n                    display: 'inline-block'\r\n                }}\r\n                ></img>\r\n            </div>\r\n            \r\n\r\n        </div>\r\n\r\n        </>\r\n    )\r\n}","import './App.css';\r\n\r\nexport default function Tip() {\r\n    function makeTip(value) {\r\n        var web3 = window.web3\r\n        if (typeof web3 === 'undefined') {\r\n            return alert('You need to install MetaMask to use this feature.  https://metamask.io')\r\n        }\r\n\r\n        var user_address = web3.eth.accounts[0]\r\n\r\n        if (!user_address) {\r\n            return alert('Please connect with your wallet')\r\n        }\r\n        web3.eth.sendTransaction({\r\n            to: '0x108616595d907Fe2e6E60DAC7004f96E14dA69Ba',\r\n            from: user_address,\r\n            value: web3.toWei(value, 'ether')\r\n        }, function (err, transactionHash) {\r\n        if (err) return alert('Oops: ' + err.message)\r\n        alert('Thank you!')\r\n        })    \r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{\r\n            position: 'fixed',\r\n            right: '15px',\r\n            bottom: '10px',\r\n            fontSize: '12px',\r\n            lineHeight: '10px',\r\n            textAlign: 'right'\r\n        }}>\r\n            <p className=\"compact-paragraph\">\r\n            🌞 Tip me:\r\n            </p>\r\n            <p className=\"compact-paragraph\">\r\n                <a href=\"/#\" onClick={() => makeTip(0.001)}>Ξ0.001</a>\r\n            </p>\r\n            <p className=\"compact-paragraph\">\r\n                <a href=\"/#\" onClick={() => makeTip(0.01)}>Ξ0.010</a>\r\n            </p>\r\n            <p className=\"compact-paragraph\">\r\n                <a href=\"/#\" onClick={() => makeTip(0.1)}>Ξ0.100</a>\r\n            </p>\r\n            <p className=\"compact-paragraph\">\r\n                <a href=\"/#\" onClick={() => makeTip(1)}>Ξ1.000</a>\r\n            </p>\r\n            <p className=\"compact-paragraph\">\r\n                Developer: <a href=\"https://twitter.com/artoriamaster\">@artoriamaster</a>\r\n            </p>\r\n            <p className=\"compact-paragraph\">\r\n                Twitter Bot: <a href=\"https://twitter.com/dex_whales\">@dex_whales</a>\r\n            </p>\r\n            <p className=\"compact-paragraph\">\r\n                Github: <a href=\"https://github.com/wjw12/dexwhales\">DEX Whales</a>\r\n            </p>\r\n\r\n        </div>\r\n    )\r\n}","import { useEffect, useState, useRef } from 'react'\nimport Select from 'react-select'\nimport makeAnimated from 'react-select/animated'\nimport Loader from 'react-loader-spinner'\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nimport { getTimeString, useInterval, getNotificationDescription } from './utils'\nimport Card from './Card'\nimport Tip from './Tip'\nimport { TITLE, API_URL, INTERVAL, action_types, markets, PINK } from './const'\nimport './App.css';\nimport uniswap_logo from './uniswap.png'\nimport sushiswap_logo from './sushiswap.png'\nimport oneinch_logo from './1inch.png'\n\n\nimport worker from 'workerize-loader!./serviceWorker'; // eslint-disable-line import/no-webpack-loader-syntax\n\nconst workerInstance = worker()\n\nconst animatedComponents = makeAnimated();\n\nfunction buildQuery(queryParams) {\n  var query = \"?\"\n  for (var key of Object.keys(queryParams)) {\n    query = query + key + `=${queryParams[key]}`\n  }\n  return API_URL + query\n}\n\n// fetch transactions order by timestamp, descending order\nasync function fetchData(from_timestamp, to_timestamp) {\n  var params = {}\n  if (from_timestamp) params.from_timestamp = from_timestamp\n  if (to_timestamp) params.to_timestamp = to_timestamp\n\n  // params.debug = true\n  var res = await fetch(buildQuery(params))\n  if (!res.ok) {\n    console.error(`error: ${res.status}`)\n    return {\n      success: false,\n      swaps: [],\n      addLP: [],\n      removeLP: [],\n    }\n  }\n\n  var result = await res.json()\n\n  var swaps = []\n  var addLP = []\n  var removeLP = []\n  var latestTime = null\n  for (var actionsWithinBlock of result) {\n    var actions = JSON.parse(actionsWithinBlock)\n    for (var action of actions) {\n      if (!latestTime || action.timestamp > latestTime) latestTime = action.timestamp\n\n      switch (action.name) {\n        case 'Swap':\n          swaps.push(action)\n          break\n        case 'AddLiquidity':\n          addLP.push(action)\n          break\n        case 'RemoveLiquidity':\n          removeLP.push(action)\n          break\n        default:\n          break\n      }\n    }\n  }\n\n  return {\n    success: true,\n    swaps: swaps,\n    addLP: addLP,\n    removeLP: removeLP,\n    latestTime: latestTime\n  }\n\n}\n\nvar defaultDisplayConfig = {\n  SWAPS: true,\n  ADD_LP: false,\n  REMOVE_LP: false,\n  NEW_PAIR: false\n}\n\nfor (var key of Object.keys(markets)) {\n  defaultDisplayConfig[key] = true\n}\n\n// https://github.com/JedWatson/react-select/blob/master/docs/styled-components.js\nconst Note = ({ Tag = 'div', ...props }) => (\n  <Tag\n    css={{\n      color: 'hsl(0, 0%, 40%)',\n      display: 'inline-block',\n      fontSize: 12,\n      fontStyle: 'italic',\n      marginTop: '1em',\n    }}\n    {...props}\n  />\n);\n\n// https://react-select.com/home\nconst Checkbox = props => <input type=\"checkbox\" {...props} />;\n\nfunction App() {\n  const [lastTime, setLastTime] = useState(0)\n  const [txData, setTxData] = useState({\n    swaps: [],\n    addLP: [],\n    removeLP: []\n  })\n  const [actionList, setActionList] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [processing, setProcessing] = useState(false)\n  const [displayConfig, setDisplayConfig] = useState(defaultDisplayConfig)\n  const [tokenList, setTokenList] = useState([])\n  const [selectedTokens, setSelectedTokens] = useState(JSON.parse(localStorage.getItem('selectedTokens')) || [])\n  const [notify, setNotify] = useState(false)\n  const latestTxTime = useRef(0)\n  // const [clientId, setClientId] = useState(null)\n\n  // function initClient() {\n  //   fetch(API_URL, { method: 'POST' })\n  //   .then(res => res.json())\n  //   .then(res => {\n  //     setClientId(res)\n  //   })\n  // }\n\n  const toggleNotification = () => {\n    if (notify) {\n      // turn off notification\n      setNotify(false)\n    }\n    else {\n      // start notification\n      Notification.requestPermission().then(status => {\n        if (status === 'granted') {\n          setNotify(true)\n        }\n      })\n      .catch(_ => {\n        alert('Notification is not supported by the browser')\n      })\n    }\n  }\n\n  const createNotification = (action) => {\n    var description = getNotificationDescription(action)\n    var img = uniswap_logo\n    switch (action.market) { // could be undefined\n      case 'sushiswap':\n          img = sushiswap_logo\n          break\n      case '1inch':\n          img = oneinch_logo\n          break\n      default:\n          img = uniswap_logo\n          break\n    }\n    console.log(description)\n    var notification = new Notification('New Whale Transaction', { body: description, icon: img})\n  }\n\n  const isTokenSelected = (address) => {\n    if (tokenList.length == 0) return true\n    address = address.toLowerCase()\n    for (var tokenData of tokenList) {\n      if (address === tokenData.address) {\n        return true\n      }\n    }\n    return false\n  }\n\n  const refreshData = () => {\n    if (loading) return\n    setLoading(true)\n    \n    // console.log('refreshData last sync time=',lastTime)\n    fetchData(latestTxTime.current).then(data => {\n      setLoading(false)\n      if (data.success) {\n        var now = Math.floor(Date.now() / 1000)\n        setLastTime(now + 1)\n      }\n      else {\n        // retry\n        setTimeout(() => { refreshData()}, 1000)\n        return\n      }\n      if (data.swaps.length == 0 && data.addLP.length == 0 && data.removeLP.length == 0) {\n        return\n      }\n\n      if (notify && latestTxTime.current > 0) {\n        if (displayConfig.SWAPS && data.swaps.length > 0) {\n          for (var action of data.swaps) {\n            if (isTokenSelected(action.token0) || isTokenSelected(action.token1)) {\n              createNotification(action)\n            }\n          }\n        }\n        if (displayConfig.ADD_LP && data.addLP.length > 0) {\n          for (var action of data.addLP) {\n            if (isTokenSelected(action.token0) || isTokenSelected(action.token1)) {\n              createNotification(action)\n            }\n          }\n        }\n        if (displayConfig.REMOVE_LP && data.removeLP.length > 0) {\n          for (var action of data.removeLP) {\n            if (isTokenSelected(action.token0) || isTokenSelected(action.token1)) {\n              createNotification(action)\n            }\n          }\n        }\n\n        // for new pairs, ignore the token filter\n        if (displayConfig.NEW_PAIR && data.addLP.length > 0) {\n          for (var action of data.addLP) {\n            if (action.newPair) {\n              createNotification(action)\n            }\n          }\n        }\n      }\n\n      if (data.latestTime) {\n        latestTxTime.current = data.latestTime + 1\n        // console.log('latest tx time', data.latestTime)\n      }\n\n      var _swaps = txData.swaps.concat(data.swaps)\n      var _addLP = txData.addLP.concat(data.addLP)\n      var _removeLP = txData.removeLP.concat(data.removeLP)\n\n\n      setTxData({\n        swaps: _swaps,\n        addLP: _addLP,\n        removeLP: _removeLP\n      })\n    })\n    .catch (e => {\n      setTimeout(() => { refreshData()}, 1000)\n    })\n  }\n  \n  const refreshDisplay = (config) => {\n    if (!config) config = displayConfig\n    var displayList = []\n    if (config.SWAPS) displayList = displayList.concat(txData.swaps)\n    if (config.ADD_LP) displayList = displayList.concat(txData.addLP)\n    if (config.REMOVE_LP) displayList = displayList.concat(txData.removeLP)\n    if (config.NEW_PAIR) displayList = displayList.concat(txData.addLP.filter(action => { return action.newPair }))\n    if (displayList.length == 0) {\n      setActionList(displayList) // empty\n      return\n    }\n    setProcessing(true) // begin processing transaction data\n    workerInstance.sortTransactions(displayList, selectedTokens).then(sortedList => {\n      setActionList(sortedList)\n      setProcessing(false)\n    })\n    // displayList = displayList.sort(sortDescendingTimestamp)\n    // setActionList(displayList)\n  }\n\n  const loadTokenList = () => {\n    fetch(buildQuery({token_list: true}))\n    .then(res => res.json())\n    .then(result => {\n       setTokenList(result)\n    })\n  }\n\n  useEffect(() => {\n    refreshDisplay()\n  }, [txData, selectedTokens])\n\n  useEffect(() => {\n    localStorage.setItem('selectedTokens', JSON.stringify(selectedTokens))\n  }, [selectedTokens])\n\n  useEffect(() => {\n    // on page loaded\n    document.title = TITLE\n    refreshData()\n    loadTokenList()\n    // initClient()\n  }, [])\n\n  // useEffect(() => {\n  //   refreshData()\n  // }, [clientId])\n\n  useInterval(refreshData, INTERVAL)\n\n\n  return (\n    <>\n      <div className=\"App\">\n        <h1>\n          {TITLE}\n        </h1>\n\n        <div \n          style={{\n            position: 'fixed',\n            right: '10px',\n            top: '10px',\n            display: 'inline-block'\n        }}>\n        <a href=\"https://alchemyapi.io/?referral=cc0b2918-0ee1-46cd-aa4a-8310f7456320\"><img style={{ width: '240px', height: '53px'}} src=\"https://static.alchemyapi.io/images/marketing/badgeLight.png\" alt=\"Alchemy Supercharged\" /></a>\n        </div>\n\n        <div \n          style={{\n            width: '55%', \n            margin: 'auto'\n        }}>\n        <p style={{\n          fontSize: '10px',\n          textAlign: 'left'\n        }}>Last Updated at {getTimeString(lastTime)} {'  '}\n         <a  href=\"/#\" onClick={() => toggleNotification()}>Notification {notify ? 'On' : 'Off'}</a> \n        </p>\n        \n        <Select\n          closeMenuOnSelect={false}\n          components={animatedComponents}\n          placeholder={\"Select tokens...\"}\n          isMulti\n          options={tokenList}\n          defaultValue={selectedTokens}\n          getOptionLabel={tokenData => `${tokenData.symbol}`}\n          getOptionValue={tokenData => `${tokenData.symbol}`}\n          onChange={action => setSelectedTokens(action)}\n        />\n        </div>\n\n\n        <Note Tag=\"label\">\n          <Checkbox\n            checked={displayConfig.SWAPS}\n            onChange={() => { \n              var newConfig = {...displayConfig, SWAPS: !displayConfig.SWAPS}\n              setDisplayConfig(newConfig); \n              refreshDisplay(newConfig); \n            }}\n            id=\"cypress-single__clearable-checkbox\"\n          />\n          SWAPS\n        </Note>\n        <Note Tag=\"label\" style={{ marginLeft: '1em' }}>\n          <Checkbox\n            checked={displayConfig.ADD_LP}\n            onChange={() => { \n              var newConfig = {...displayConfig, ADD_LP: !displayConfig.ADD_LP}\n              setDisplayConfig(newConfig); \n              refreshDisplay(newConfig); \n            }}\n            id=\"cypress-single__searchable-checkbox\"\n          />\n          ADD LIQUIDITY\n        </Note>\n        <Note Tag=\"label\" style={{ marginLeft: '1em' }}>\n          <Checkbox\n            checked={displayConfig.REMOVE_LP}\n            onChange={() => { \n              var newConfig = {...displayConfig, REMOVE_LP: !displayConfig.REMOVE_LP}\n              setDisplayConfig(newConfig); \n              refreshDisplay(newConfig); \n            }}\n            id=\"cypress-single__searchable-checkbox\"\n          />\n          REMOVE LIQUIDITY\n        </Note>\n        <Note Tag=\"label\" style={{ marginLeft: '1em' }}>\n          <Checkbox\n            checked={displayConfig.NEW_PAIR}\n            onChange={() => { \n              var newConfig = {...displayConfig, NEW_PAIR: !displayConfig.NEW_PAIR}\n              setDisplayConfig(newConfig); \n              refreshDisplay(newConfig); \n            }}\n            id=\"cypress-single__searchable-checkbox\"\n          />\n          NEW PAIRS\n        </Note>\n\n        { loading &&\n          <Loader\n            type=\"Audio\"\n            color={PINK}\n            height={16}\n            width={16}\n            style={{\n              position: 'fixed',\n              left: '8px',\n              top: '8px',\n              display: 'inline-block'\n            }}\n          />\n        }\n\n        {actionList.map(action => {\n          return (\n            <Card action={action}></Card>\n          )\n        })}\n\n        { (!loading && !processing && actionList.length < 5) &&\n          <div style={{\n            width: '55%', \n            margin: 'auto',\n            fontSize: '15px'\n          }}>\n            <p>No more whale activities within the past 24 hours</p>\n          </div>\n\n        }\n\n      </div>\n\n      <Tip></Tip>\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}